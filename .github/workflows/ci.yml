name: CI

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: 9.0.x

jobs:
  # create-package:    
  #   runs-on: ubuntu-latest   
  #   name: Create package
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4 
      
  #   - name: Create package
  #     uses: ./.github/actions/create-package
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}

  # codeql-analysis:    
  #   name: CodeQL analysis
  #   runs-on: ubuntu-latest
  #   permissions:
  #     security-events: write
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
        
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}

  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v3
  #       with:
  #         languages: csharp
        
  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v3
        
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v3

  # dependency-review:
  #   if: ${{ github.event_name == 'pull_request' }}
  #   name: Dependency review
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Dependency review
  #       uses: actions/dependency-review-action@v4

  github-package-push:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    #needs: [create-package, codeql-analysis]
    runs-on: ubuntu-latest
    name: GitHub package push
    permissions:
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4 
      
    # - name: Create package
    #   uses: ./.github/actions/create-package
    #   with:
    #     dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Get nuget package version id
      id: get-nuget-package-version-id
      shell: pwsh
      run: |
        curl https://api.github.com/users/Arnab-Developer/packages/nuget/Arc.StringSanitizer/versions `
          -X "GET" `
          -H "Accept: application/vnd.github+json" `
          -H "X-GitHub-Api-Version: 2022-11-28" `
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" >> $HOME/versions.json
          
        $version = [System.IO.File]::ReadAllText("$HOME/versions.json") `
          | ConvertFrom-Json `
          | Where-Object { $_.name -eq "3.0.0" }

        $versionId = $version -ne $null ? $version.Id : ''
        write-output $versionId
        #$versionId >> $GITHUB_OUTPUT

    - name: Delete nuget package
      if: ${{ steps.get-nuget-package-version-id.outputs.versionId != '' }}
      uses: actions/delete-package-versions@v5
      with:
        package-name: 'Arc.StringSanitizer'
        package-type: 'nuget'
        package-version-ids: '${{ steps.get-nuget-package-version-id.outputs.versionId }}'

    - name: Push nuget package
      run: |
        dotnet nuget push "src/Arc.StringSanitizer/bin/Release/Arc.StringSanitizer.3.0.0.nupkg" \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --source "https://nuget.pkg.github.com/Arnab-Developer/index.json" \
          --skip-duplicate
