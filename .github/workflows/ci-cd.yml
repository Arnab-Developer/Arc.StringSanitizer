name: CI CD

on:  
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  DOTNET_VERSION: 7.0.x
  CONFIGURATION: Release

jobs:
  build-test:    
    runs-on: ubuntu-latest   
    name: Build and test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3 
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 
        
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }}

    - name: Test
      run: dotnet test --configuration ${{ env.CONFIGURATION }}

    - name: Create nuget package
      run: dotnet pack --configuration ${{ env.CONFIGURATION }}

  codeql-analysis:    
    name: CodeQL analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: csharp
        
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  github-nuget-push:
    if: ${{ github.event_name == 'push' || github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: [build-test, codeql-analysis]
    name: GitHub nuget push
    permissions:
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3 
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}    
        
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }}

    - name: Create nuget package
      run: dotnet pack --configuration ${{ env.CONFIGURATION }}

    - name: Push nuget package
      run: dotnet nuget push "Arc.StringSanitizer/bin/Release/Arc.StringSanitizer.1.0.8.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/Arnab-Developer/index.json" --skip-duplicate

  nuget-org-push:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: [build-test, codeql-analysis]
    name: nuget org push
    environment:
      name: "NuGetEnv"
      url: "https://www.nuget.org/packages/Arc.StringSanitizer"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3      

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 
        
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }}

    - name: Create nuget package
      run: dotnet pack --configuration ${{ env.CONFIGURATION }}

    - name: Push nuget package
      run: dotnet nuget push "Arc.StringSanitizer/bin/Release/Arc.StringSanitizer.1.0.8.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
